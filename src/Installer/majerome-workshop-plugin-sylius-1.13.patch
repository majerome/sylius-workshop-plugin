Subject: [PATCH] Set up majerome/sylius-workshop-plugin for Sylius 1.13
---
Index: config/routes.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/routes.yaml b/config/routes.yaml
--- a/config/routes.yaml	(revision 4bcc66e2af2afa3963c9b76f9ecffa4061f86060)
+++ b/config/routes.yaml	(date 1745853119214)
@@ -1,2 +1,4 @@
 sylius_paypal_webhook:
     resource: "@SyliusPayPalPlugin/Resources/config/webhook_routing.yaml"
+majerome_workshop_plugin:
+    resource: "@MajeromeWorkshopPlugin/config/routing.yaml"
Index: config/packages/_sylius.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/packages/_sylius.yaml b/config/packages/_sylius.yaml
--- a/config/packages/_sylius.yaml	(revision 4bcc66e2af2afa3963c9b76f9ecffa4061f86060)
+++ b/config/packages/_sylius.yaml	(date 1745853119214)
@@ -9,9 +9,15 @@
     - { resource: "@SyliusPayPalPlugin/Resources/config/config.yaml" }
     - { resource: "../parameters.yaml" }

+    - { resource: "@MajeromeWorkshopPlugin/config/config.yaml" }
+
 parameters:
     sylius_core.public_dir: '%kernel.project_dir%/public'

+# Enable state machine abstraction by the Symfony Workflow component
+sylius_state_machine_abstraction:
+    default_adapter: symfony_workflow
+
 when@dev:
     sylius_api:
         enabled: true
@@ -141,6 +147,7 @@
         product:
             classes:
                 model: App\Entity\Product\Product
+                repository: App\Repository\ProductRepository
             translation:
                 classes:
                     model: App\Entity\Product\ProductTranslation
Index: src/Entity/Product/Product.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Entity/Product/Product.php b/src/Entity/Product/Product.php
--- a/src/Entity/Product/Product.php	(revision 4bcc66e2af2afa3963c9b76f9ecffa4061f86060)
+++ b/src/Entity/Product/Product.php	(date 1745853119214)
@@ -5,6 +5,8 @@
 namespace App\Entity\Product;

 use Doctrine\ORM\Mapping as ORM;
+use Majerome\WorkshopPlugin\Entity\Product\ProductInterface;
+use Majerome\WorkshopPlugin\Entity\Product\ProductTrait;
 use Sylius\Component\Core\Model\Product as BaseProduct;
 use Sylius\Component\Product\Model\ProductTranslationInterface;

@@ -14,8 +16,9 @@
  */
 #[ORM\Entity]
 #[ORM\Table(name: 'sylius_product')]
-class Product extends BaseProduct
+class Product extends BaseProduct implements ProductInterface
 {
+    use ProductTrait;
     protected function createTranslation(): ProductTranslationInterface
     {
         return new ProductTranslation();
Index: templates/bundles/SyliusShopBundle/Taxon/_horizontalMenu.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/bundles/SyliusShopBundle/Taxon/_horizontalMenu.html.twig b/templates/bundles/SyliusShopBundle/Taxon/_horizontalMenu.html.twig
new file mode 100644
--- /dev/null	(date 1745849213914)
+++ b/templates/bundles/SyliusShopBundle/Taxon/_horizontalMenu.html.twig	(date 1745849213914)
@@ -0,0 +1,28 @@
+{% macro item(taxon) %}
+    {% import _self as macros %}
+
+    {% if taxon.enabledChildren|length > 0 %}
+        <div class="ui dropdown item" {{ sylius_test_html_attribute('menu-item', taxon.name) }}>
+            <span class="text">{{ taxon.name }}</span>
+            <i class="dropdown icon"></i>
+            <div class="menu">
+                {% for childTaxon in taxon.enabledChildren %}
+                    {{ macros.item(childTaxon) }}
+                {% endfor %}
+            </div>
+        </div>
+    {% else %}
+        <a href="{{ path('sylius_shop_product_index', {'slug': taxon.slug, '_locale': taxon.translation.locale}) }}" class="item" {{ sylius_test_html_attribute('menu-item', taxon.name) }}>{{ taxon.name }}</a>
+    {% endif %}
+{% endmacro %}
+
+{% import _self as macros %}
+
+{% if taxons|length > 0 %}
+    <div class="ui large stackable menu" {{ sylius_test_html_attribute('menu') }}>
+        {{ render(path('majerome.workshop_plugin.shop_partial_branded_products_index')) }}
+        {% for taxon in taxons %}
+            {{ macros.item(taxon) }}
+        {% endfor %}
+    </div>
+{% endif %}
Index: src/Repository/ProductRepository.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Repository/ProductRepository.php b/src/Repository/ProductRepository.php
new file mode 100644
--- /dev/null	(date 1745853119214)
+++ b/src/Repository/ProductRepository.php	(date 1745853119214)
@@ -0,0 +1,14 @@
+<?php
+
+declare(strict_types=1);
+
+namespace App\Repository;
+
+use Majerome\WorkshopPlugin\Repository\ProductRepositoryInterface;
+use Majerome\WorkshopPlugin\Repository\ProductRepositoryTrait;
+use Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductRepository as BaseProductRepository;
+
+final class ProductRepository extends BaseProductRepository implements ProductRepositoryInterface
+{
+    use ProductRepositoryTrait;
+}
Index: config/services.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/services.yaml b/config/services.yaml
--- a/config/services.yaml	(revision 5cc2a7cc57d979e04728de4718849c08fe32d383)
+++ b/config/services.yaml	(date 1746007395366)
@@ -21,10 +21,19 @@
     # this creates a service per class whose id is the fully-qualified class name
     App\:
         resource: '../src/*'
-        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'
+        exclude: '../src/{Entity,Migrations,Tests,Factory,Kernel.php}'

     # Controllers are imported separately to make sure services can be injected
     # as action arguments even if you don't extend any base controller class
     App\Controller\:
         resource: '../src/Controller'
         tags: ['controller.service_arguments']
+
+    app.api.brand_enabled_filter:
+        parent: api_platform.doctrine.orm.boolean_filter
+        public: true
+        tags:
+            - { name: api_platform.filter }
+
+    App\Api\Applicator\BrandsStateApplicator:
+        public: true
Index: config/serialization/Product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/serialization/Product.xml b/config/serialization/Product.xml
new file mode 100644
--- /dev/null	(date 1746015468522)
+++ b/config/serialization/Product.xml	(date 1746015468522)
@@ -0,0 +1,14 @@
+<serializer xmlns="http://symfony.com/schema/dic/serializer-mapping"
+            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+            xsi:schemaLocation="http://symfony.com/schema/dic/serializer-mapping https://symfony.com/schema/dic/serializer-mapping/serializer-mapping-1.0.xsd"
+>
+    <class name="App\Entity\Product\Product">
+        <attribute name="brand" serialized-name="manufacturer">
+            <group>shop:product:index</group>
+            <group>custom</group>
+        </attribute>
+        <attribute name="code">
+            <group>custom</group>
+        </attribute>
+    </class>
+</serializer>
Index: config/serialization/Brand.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/serialization/Brand.xml b/config/serialization/Brand.xml
new file mode 100644
--- /dev/null	(date 1746015502817)
+++ b/config/serialization/Brand.xml	(date 1746015502817)
@@ -0,0 +1,65 @@
+<?xml version="1.0" ?>
+<serializer xmlns="http://symfony.com/schema/dic/serializer-mapping"
+            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+            xsi:schemaLocation="http://symfony.com/schema/dic/serializer-mapping https://symfony.com/schema/dic/serializer-mapping/serializer-mapping-1.0.xsd"
+>
+    <class name="Majerome\WorkshopPlugin\Entity\Brand\Brand">
+        <attribute name="id">
+            <group>admin:brands:read</group>
+            <group>shop:brands:read</group>
+            <group>admin:brand:read</group>
+            <group>shop:brand:read</group>
+        </attribute>
+        <attribute name="name">
+            <group>admin:brands:read</group>
+            <group>shop:brands:read</group>
+            <group>admin:brand:read</group>
+            <group>shop:brand:read</group>
+            <group>shop:product:index</group>
+            <group>custom</group>
+        </attribute>
+        <attribute name="type">
+            <group>admin:brands:read</group>
+            <group>shop:brands:read</group>
+            <group>admin:brand:read</group>
+            <group>shop:brand:read</group>
+        </attribute>
+        <attribute name="description">
+            <group>admin:brand:read</group>
+            <group>shop:brand:read</group>
+        </attribute>
+        <attribute name="code">
+            <group>admin:brands:read</group>
+            <group>admin:brand:read</group>
+        </attribute>
+        <attribute name="enabled">
+            <group>admin:brands:read</group>
+            <group>admin:brand:read</group>
+        </attribute>
+        <attribute name="state">
+            <group>admin:brands:read</group>
+            <group>admin:brand:read</group>
+        </attribute>
+        <attribute name="createdAt">
+            <group>admin:brands:read</group>
+            <group>shop:brands:read</group>
+            <group>admin:brand:read</group>
+            <group>shop:brand:read</group>
+        </attribute>
+        <attribute name="updatedAt">
+            <group>admin:brands:read</group>
+            <group>shop:brands:read</group>
+            <group>admin:brand:read</group>
+            <group>shop:brand:read</group>
+        </attribute>
+        <attribute name="products">
+            <group>admin:brand:read</group>
+            <group>shop:brand:read</group>
+        </attribute>
+        <attribute name="channels">
+            <group>admin:brands:read</group>
+            <group>admin:brand:read</group>
+        </attribute>
+    </class>
+
+</serializer>
Index: src/Api/Applicator/BrandsStateApplicator.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Api/Applicator/BrandsStateApplicator.php b/src/Api/Applicator/BrandsStateApplicator.php
new file mode 100644
--- /dev/null	(date 1746008361743)
+++ b/src/Api/Applicator/BrandsStateApplicator.php	(date 1746008361743)
@@ -0,0 +1,33 @@
+<?php
+
+declare(strict_types=1);
+
+namespace App\Api\Applicator;
+
+use Majerome\WorkshopPlugin\Entity\Brand\Brand;
+use Majerome\WorkshopPlugin\StateMachine\BrandTransitions;
+use Sylius\Bundle\ApiBundle\Exception\StateMachineTransitionFailedException;
+use Symfony\Component\Workflow\Registry;
+
+final class BrandsStateApplicator
+{
+    public function __construct(
+        private Registry $registry
+    ) {
+    }
+
+    public function approve(Brand $brand): Brand
+    {
+        $sm = $this->registry->get($brand, BrandTransitions::GRAPH);
+
+        if (!$sm->can($brand, BrandTransitions::TRANSITION_APPROVE)) {
+            throw new StateMachineTransitionFailedException('Cannot approve the Brand.');
+        }
+        if (!$brand->getDescription()) {
+            $brand->setDescription('');
+        }
+        $sm->apply($brand, BrandTransitions::TRANSITION_APPROVE);
+
+        return $brand;
+    }
+}
Index: config/api_platform/Product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/api_platform/Product.xml b/config/api_platform/Product.xml
new file mode 100644
--- /dev/null	(date 1746015652734)
+++ b/config/api_platform/Product.xml	(date 1746015652734)
@@ -0,0 +1,26 @@
+<?xml version="1.0" ?>
+<resources xmlns="https://api-platform.com/schema/metadata"
+           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+           xsi:schemaLocation="https://api-platform.com/schema/metadata https://api-platform.com/schema/metadata/metadata-2.0.xsd"
+>
+    <resource class="App\Entity\Product\Product" shortName="Product">
+        <attribute name="validation_groups">sylius</attribute>
+
+        <attribute name="order">
+            <attribute name="code">ASC</attribute>
+        </attribute>
+
+        <collectionOperations>
+            <collectionOperation name="shop_get">
+                <attribute name="path">/shop/products/custom</attribute>
+                <attribute name="normalization_context">
+                    <attribute name="groups">
+                        <attribute>custom</attribute>
+                    </attribute>
+                </attribute>
+            </collectionOperation>
+        </collectionOperations>
+
+        <property name="code" identifier="true" required="true" />
+    </resource>
+</resources>
Index: config/api_platform/Brand.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/api_platform/Brand.xml b/config/api_platform/Brand.xml
new file mode 100644
--- /dev/null	(date 1746006555473)
+++ b/config/api_platform/Brand.xml	(date 1746006555473)
@@ -0,0 +1,69 @@
+<?xml version="1.0" ?>
+<resources xmlns="https://api-platform.com/schema/metadata"
+           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+           xsi:schemaLocation="https://api-platform.com/schema/metadata https://api-platform.com/schema/metadata/metadata-2.0.xsd"
+>
+    <resource class="Majerome\WorkshopPlugin\Entity\Brand\Brand" shortName="Brand">
+        <collectionOperations>
+            <collectionOperation name="shop_get">
+                <attribute name="method">GET</attribute>
+                <attribute name="path">/shop/brands</attribute>
+                <attribute name="normalization_context">
+                    <attribute name="groups">shop:brands:read</attribute>
+                </attribute>
+                <attribute name="filters">
+                    <attribute>app.api.brand_enabled_filter</attribute>
+                </attribute>
+            </collectionOperation>
+            <collectionOperation name="admin_get">
+                <attribute name="method">GET</attribute>
+                <attribute name="path">/admin/brands</attribute>
+                <attribute name="normalization_context">
+                    <attribute name="groups">admin:brands:read</attribute>
+                </attribute>
+            </collectionOperation>
+            <collectionOperation name="admin_create">
+                <attribute name="method">POST</attribute>
+                <attribute name="path">/admin/brands</attribute>
+                <attribute name="normalization_context">
+                    <attribute name="groups">admin:brand:read</attribute>
+                </attribute>
+            </collectionOperation>
+        </collectionOperations>
+        <itemOperations>
+            <itemOperation name="shop_get">
+                <attribute name="method">GET</attribute>
+                <attribute name="path">/shop/brands/{id}</attribute>
+                <attribute name="normalization_context">
+                    <attribute name="groups">shop:brand:read</attribute>
+                </attribute>
+            </itemOperation>
+            <itemOperation name="admin_get">
+                <attribute name="method">GET</attribute>
+                <attribute name="path">/admin/brands/{id}</attribute>
+                <attribute name="normalization_context">
+                    <attribute name="groups">admin:brand:read</attribute>
+                </attribute>
+            </itemOperation>
+            <itemOperation name="admin_update">
+                <attribute name="method">PUT</attribute>
+                <attribute name="path">/admin/brands/{id}</attribute>
+                <attribute name="normalization_context">
+                    <attribute name="groups">admin:brand:read</attribute>
+                </attribute>
+            </itemOperation>
+            <itemOperation name="admin_delete">
+                <attribute name="method">DELETE</attribute>
+                <attribute name="path">/admin/brands/{id}</attribute>
+            </itemOperation>
+            <itemOperation name="admin_approve">
+                <attribute name="method">PATCH</attribute>
+                <attribute name="input">false</attribute>
+                <attribute name="path">/admin/brands/{id}/approve</attribute>
+                <attribute name="controller">App\Api\Applicator\BrandsStateApplicator::approve</attribute>
+            </itemOperation>
+        </itemOperations>
+
+        <property name="id" identifier="true" writable="false" />
+    </resource>
+</resources>
